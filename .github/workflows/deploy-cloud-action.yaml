name: Deploy to Cloud Function

on:
  push:
    branches:
      - master

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # with:
      #   submodules: true
      #   ssh-key: ${{ secrets.GIT_SSH_KEY }}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.2
      # - name: Cache Go modules
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/go/pkg/mod
      #       ~/.cache/go-build
      #     key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      #     restore-keys: |
      #       ${{ runner.os }}-go-

      - run: npm i

      - run: go mod download

      - run: npm run build

      # Cache build outputs or save necessary files as artifacts if needed
      - name: Save Build Outputs
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: . # or specify directories if specific artifacts

  deploy:
    name: Deploy to Cloud Function
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [crowdy-chat, trendly]
    steps:
      - uses: actions/checkout@v3

      - name: Download Build Outputs
        uses: actions/download-artifact@v3
        with:
          name: build-output

      - name: Add Service JSON and Deploy
        env:
          FIREBASE_SERVICE_ACCOUNT_BASE64: ${{ matrix.app == 'crowdy-chat' && secrets.FIREBASE_SERVICE_ACCOUNT || secrets.TRENDLY_SERVICE_ACCOUNT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          OPENAI_API_KEY: ${{ matrix.app == 'crowdy-chat' && secrets.OPENAI_API_KEY || '' }}
        run: |
          echo $FIREBASE_SERVICE_ACCOUNT_BASE64 | base64 -d > service-account.json
          if [ "${{ matrix.app }}" == "crowdy-chat" ]; then
            npx sls deploy --config serverless.cc.yml
          else
            npx sls deploy --config serverless.trendly.yml
          fi